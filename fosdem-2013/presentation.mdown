
# OpenStack Orchestration with Heat

**Tomáš Šedovič**

*Software engineer at* Red Hat*, Czech Republic*

<tsedovic@redhat.com>


---

# Outline

* Heat
* Template Overview
* The Demo
* Q&A

---

<h1 class="heat-slide">Heat</h1>

---

# What is Heat?

API + UI for orchestration on OpenStack.

Describe you cloud deployment in a declarative language.

Heat will process and build it and keep it up.

---

# What can you do with it?

* Launch & provision instances with inter dependencies & parameters
* Attach block (cinder) or object (swift) storage
* Floating IPs
* Load balancing
* Autoscaling
* High availability (restart services, instances, the whole stack)
* Networking (quantum)

---

# AWS CloudFormation

<http://aws.amazon.com/cloudformation/>

* Inspiration for Heat
* Our original API and template formats are compatible
* Heat can be controlled via **[boto](https://github.com/boto/boto)**

---

# Relation with OpenStack

* Along with ceilometer the first external project accepted into incubation
* Using the same infrastructure (github, gerrit, launchpad, mailing lists, meetings)
* Follow the same coding style, architecture, packaging, etc.

---

# Heat Templates

---

# Structure

    HeatTemplateFormatVersion: 2012-12-12
    Description: This is an empty Heat template

    Parameters:
      ...

    Resources:
      ...

    Outputs:
      ...

---

# Resource example

    MyApacheServer:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: f17-jeos
        InstanceType: {Ref: MyFlavor}
        KeyName: {Ref: MyApacheSSHKey}
        Metadata:
          ...
        UserData: |
          #!/bin/bash
          /opt/aws/bin/cfn-init
          rm -rf /
          echo Trololo



---

# Provisioning

List **packages**, **services**, **files** in the `Metadata` section.

Put custom code in the `UserData` section.

`cfn-init` installs packages, enables services & uploads files.


---

# CloudWatch

Monitors the instances' resources, can act on specified conditions:

* Start a new instance under high RAM/CPU utilization
* Spin down extra instances on low utilization
* Restart services/instances/the whole stack when it goes down

---

# The Demo

---

# Autoscaling

* A wordpress instance behind a load balancer
* Spin up a new instance when the RAM load > 50%
* Delete it when the load decreases

---

# The Heat community
  - about 5 core contributors
  - about 12 other contributors over time (7 outside of Red Hat)
    * testing, feature requests, bug reporting; little code
  - Ceilometer collaboration

---


# Wrap Up
  - <http://heat-api.org/>
  - <https://github.com/openstack/heat>
  - `#heat` on freenode (we're there pretty much 24/7)

---

# -30-


